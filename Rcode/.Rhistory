getwd()
substr("abcdef", 2, 4)
getwd()
s<-getwd()
substr(s, 1, nchar(s)-4)
substr(s, 2, nchar(s)-4)
substr(s, 3, nchar(s)-4)
substr(s, 1, nchar(s)-4)
substr(s, 1, nchar(s)-5)
path<-paste(substr(s, 1, nchar(s)-5),"Data/raw.csv",sep = "")
result <- read.csv(file=path,header=T,stringsAsFactors = FALSE)
result <- read.csv(file="path",header=T,stringsAsFactors = FALSE)
path<-paste(substr(s, 1, nchar(s)-5),"Data/raw.csv",sep = "")
substr(s, 1, nchar(s)-5)
paste(substr(s, 1, nchar(s)-5),"Data/raw.csv",sep = "")
path<-paste(substr(s, 1, nchar(s)-5),"rental_crawlers/raw.csv",sep = "")
result <- read.csv(file=path,header=T,stringsAsFactors = FALSE)
View(result)
s<-getwd()
path<-paste(substr(s, 1, nchar(s)-5),"Data/raw.csv",sep = "")
result <- read.csv(file=path,header=T,stringsAsFactors = FALSE)
library(tidyverse)
s<-getwd()
substr(s, 1, nchar(s)-5)
datapath<-paste(substr(s, 1, nchar(s)-5),"rental_crawlers/raw_listing.csv",sep = "")
result <- read.csv(file=datapath,header=T,stringsAsFactors = FALSE)
result$ID <- seq.int(nrow(result))
str(result)
View(result)
View(result)
result %>%
arrange(desc(is.na(title))
;
result %>%
arrange(desc(is.na(title))
)
result<- result %>%
arrange(desc(is.na(title)))
View(result)
View(result)
library(tidyverse)
s<-getwd()
substr(s, 1, nchar(s)-5)
datapath<-paste(substr(s, 1, nchar(s)-5),"rental_crawlers/raw_listing.csv",sep = "")
result <- read.csv(file=datapath,header=T,stringsAsFactors = FALSE)
#If you cannot load the raw dataset, you need to set it by yourself.
result<- result %>%
arrange(desc(is.na(title)),
desc(is.na(description)))
result$ID <- seq.int(nrow(result))
View(result)
View(result)
library(tidyverse)
s<-getwd()
substr(s, 1, nchar(s)-5)
datapath<-paste(substr(s, 1, nchar(s)-5),"rental_crawlers/raw_listing.csv",sep = "")
result <- read.csv(file=datapath,header=T,stringsAsFactors = FALSE)
#If you cannot load the raw dataset, you need to set it by yourself.
result<- result %>%
arrange(desc(is.na(title)))
result$ID <- seq.int(nrow(result))
View(result)
View(result)
library(tidyverse)
s<-getwd()
substr(s, 1, nchar(s)-5)
datapath<-paste(substr(s, 1, nchar(s)-5),"rental_crawlers/raw_listing.csv",sep = "")
result <- read.csv(file=datapath,header=T,stringsAsFactors = FALSE)
#If you cannot load the raw dataset, you need to set it by yourself.
result<- result %>%
arrange(desc(is.na(title)))
result$ID <- seq.int(nrow(result))
View(result)
library(tidyverse)
s<-getwd()
substr(s, 1, nchar(s)-5)
datapath<-paste(substr(s, 1, nchar(s)-5),"rental_crawlers/raw_listing.csv",sep = "")
result <- read.csv(file=datapath,header=T,stringsAsFactors = FALSE)
#If you cannot load the raw dataset, you need to set it by yourself.
result<- result %>%
arrange(desc(is.na(description)))
result$ID <- seq.int(nrow(result))
View(result)
View(result)
library(tidyverse)
s<-getwd()
substr(s, 1, nchar(s)-5)
datapath<-paste(substr(s, 1, nchar(s)-5),"rental_crawlers/raw_listing.csv",sep = "")
result <- read.csv(file=datapath,header=T,stringsAsFactors = FALSE)
#If you cannot load the raw dataset, you need to set it by yourself.
result<- result %>%
arrange(desc(is.na(description)))
result$ID <- seq.int(nrow(result))
View(result)
result[11]
result[11,]
result[11,]==result[13]
result[11,]==result[13,]
result$title[11,]
result$title[11]==result$title[13]
result$title
result$title[11]
result$title[13]
result$title[11]==result$title[13]
library(tidyr)
library(dplyr)
df <- data.frame(x = c(NA, "a.b", "a.d", "b.c"))
View(df)
View(df)
df %>% separate(x, c("A", "B"))
# If every row doesn't split into the same number of pieces, use
# the extra and fill arguments to control what happens
df <- data.frame(x = c("a", "a b", "a b c", NA))
df
df %>% separate(x, c("a", "b"))
# The same behaviour but no warnings
df %>% separate(x, c("a", "b"), extra = "drop", fill = "right")
# Another option:
df %>% separate(x, c("a", "b"), extra = "merge", fill = "left")
# If only want to split specified number of times use extra = "merge"
df <- data.frame(x = c("x: 123", "y: error: 7"))
df
df %>% separate(x, c("key", "value"), ": ", extra = "merge")
View(result)
result %>%
seperate(housing_type,c("bedroom","feet"),"-")
result %>%
separate(housing_type,c("bedroom","feet"),"-")
View(result)
result[11,]==result[13,]
result$title[11]==result$title[13]
all.equal.character(result$title[11],result$title[13])
result[11,]==result[13,]
all.equal.character(result[11],result[13])
all.equal.character(result[11,],result[13,])
result[11,]==result[13,]
result[11,]
result[13,]
result[11,]
result$title[11]==result$title[13]
all.equal.character(result[11,],result[13,])
all.equal.character(result$title[11],result$title[13])
result[11,]
result$title[11]
result$title[13]
result$title[11]==result$title[13]
str(result$title)
all.equal.character(result$title[11],result$title[13])
almost.equal(result$title[11],result$title[13])
all.equal.character(result$title[11],result$title[13])
all.equal(result$title[11],result$title[13])
result[11,]
result$title[11]
result$title[13]
result$title[11]==result$title[13]
result$title
View(result)
View(result)
result<- result %>%
arrange(desc(is.na(title)))
View(result)
View(result)
result$title[872]==result$title[873]
result$title[872]==result$title[877]
#Let's delete the exact duplicates from the same name "or" the same description
result1<- [!duplicated(result$title)]
#Let's delete the exact duplicates from the same name "or" the same description
resul,t1<- result %>%
filter(!duplicated(result$title))
#Let's delete the exact duplicates from the same name "or" the same description
result1<- result %>%
filter(!duplicated(result$title))
result1
View(result1)
result(!duplicated(result$title))
duplicated(result$title)
!duplicated(result$title)
#Let's delete the exact duplicates from the same name "or" the same description
result1<- result %>%
filter(!duplicated(title)|!duplicated(description))
#Let's delete the exact duplicates from the same name "or" the same description
result<- result %>%
filter(!duplicated(title)|!duplicated(description))
View(result)
result$title[40]==result$title[41]
result<- result %>%
filter(!duplicated(title))
s<-getwd()
substr(s, 1, nchar(s)-5)
datapath<-paste(substr(s, 1, nchar(s)-5),"rental_crawlers/raw_listing.csv",sep = "")
result <- read.csv(file=datapath,header=T,stringsAsFactors = FALSE)
result<- result %>%
filter(!duplicated(title)&!duplicated(description))
View(result)
View(result)
result$ID <- seq.int(nrow(result))
result$title[322]
result$title[321]
result$description[321]
result$description[322]
result$description[321]==result$description[322]
all.equal.character(result$description[321],result$description[322])
all.equal(result$description[321],result$description[322])
almost.equal(result$description[321],result$description[322])
almost.equal(result$description[321],result$description[322])
result$description[321]
result$description[322]
?duplicated
?duplicated
result1 %>%
filter(!duplicated(lat)&!duplicated(long))
result1 <- result %>%
filter(!duplicated(lat)&!duplicated(long))
View(result1)
View(result1)
result[321,]==result[322,]
result1 <- result %>%
filter(!duplicated(lat)&!duplicated(long)&!duplicated(housing_type)&!duplicated(location)&!duplicated(price))
View(result1)
View(result1)
!duplicated(title)
!duplicated(result$title)
!duplicated(lat)
!duplicated(description)
result1 <- result %>%
filter(!duplicated(lat)|!duplicated(long))
)
result1 <- result %>%
filter(!duplicated(lat)||!duplicated(long))
result<- result %>%
filter(!duplicated(title)&!duplicated(description))
result1 <- result %>%
filter(!duplicated(lat)||!duplicated(long))
result[321,]==result[322,]
result1 <- result %>%
filter(!duplicated(lat)&!duplicated(long))
